# -*- mode: Snakemake -*-
# IGV Rules

igv_prefs = {'ENABLE_ANTIALIASING': True, 'NAME_PANEL_WIDTH': 360, 'SAM.MAX_VISIBLE_RANGE': 1000, 'SAM.SHOW_CENTER_LINE': False, 'SAM.SHOW_ALIGNMENT_TRACK': True}

rule igv_filt:
    output:
        R1=PROC_DIR + "/analysis_data/{sample}.R1.igv.fastq.gz",
        R2=PROC_DIR + "/analysis_data/{sample}.R2.igv.fastq.gz"
    input:
        R1=PROC_DIR + "/analysis_data/{sample}.R1.trim.fastq.gz",
        R2=PROC_DIR + "/analysis_data/{sample}.R2.trim.primer.fastq.gz"
    params: 
        tool=CODE_DIR + "/filt.R"
    log:
        PROC_DIR + "/logs/{sample}.igv_filt.log"
    resources:
        mem_mb=lambda wildcards, attempt: attempt * config["filtMB"]
    shell:
        """
        Rscript {params.tool} {input.R1} {input.R2} -o {output.R1} {output.R2} \
          --compress > {log} 2>&1
        """

rule bowtie:
    output:
        PROC_DIR + "/analysis_data/{sample}.paired.bam"
    input:
        R1=PROC_DIR + "/analysis_data/{sample}.R1.igv.fastq.gz",
        R2=PROC_DIR + "/analysis_data/{sample}.R2.igv.fastq.gz",
        genome=PROC_DIR + "/analysis_data/{sample}.fasta"
    params:
        samtools="samtools",
        bowtie="/usr/bin/bowtie2",
        bowtie_index=IGV_BOWTIE_INDEX
    shell:
        "{params.bowtie} -x {params.bowtie_index} -1 {input.R1} -2 {input.R2} -k 2 --local -N 1 | {params.samtools} sort | {params.samtools} view -Sb - > {output}"

rule bowtie_index:
    output:
        PROC_DIR + "/analysis_data/{bam}.bam.bai"
    input:
        bam=PROC_DIR + "/analysis_data/{bam}.bam"
    params:
        samtools="samtools"
    shell:
        "{params.samtools} index {input.bam}"


rule bowtie1:
    output:
        PROC_DIR + "/analysis_data/{sample}.R1.bam"
    input:
        R1=PROC_DIR + "/analysis_data/{sample}.R1.trim.fastq.gz",
        genome=PROC_DIR + "/analysis_data/{sample}.fasta"
    params:
        samtools="samtools",
        bowtie="/usr/bin/bowtie2",
        bowtie_index=IGV_BOWTIE_INDEX
    shell:
        "{params.bowtie} -x {params.bowtie_index} -U {input.R1} -k 2 --local -N 1 | {params.samtools} sort | {params.samtools} view -Sb - > {output}"

rule bowtie2:
    output:
        PROC_DIR + "/analysis_data/{sample}.R2.bam"
    input:
        R2=PROC_DIR + "/analysis_data/{sample}.R2.trim.primer.fastq.gz",
        genome=PROC_DIR + "/analysis_data/{sample}.fasta"
    params:
        samtools="samtools",
        bowtie="/usr/bin/bowtie2",
        bowtie_index=IGV_BOWTIE_INDEX
    shell:
        "{params.bowtie} -x {params.bowtie_index} -U {input.R2} -k 2 --local -N 1 | {params.samtools} sort | {params.samtools} view -Sb - > {output}"

rule igv:
    output:
        U3=PROC_DIR + "/output_data/IGV/{sample}.U3.alignment.png",
        U5=PROC_DIR + "/output_data/IGV/{sample}.U5.alignment.png",
        genome=PROC_DIR + "/output_data/IGV/{sample}.alignment.png",
    input:
        bam=PROC_DIR + "/analysis_data/{sample}.paired.bam",
        R1_bam=PROC_DIR + "/analysis_data/{sample}.R1.bam",
        R2_bam=PROC_DIR + "/analysis_data/{sample}.R2.bam",
        bam_index=PROC_DIR + "/analysis_data/{sample}.paired.bam.bai",
        R1_bam_index=PROC_DIR + "/analysis_data/{sample}.R1.bam.bai",
        R2_bam_index=PROC_DIR + "/analysis_data/{sample}.R2.bam.bai",
        genome=PROC_DIR + "/analysis_data/{sample}.fasta"
    params:
        U3_locus=IGV_GENOME_NAME + ":8720-9719",
        U5_locus=IGV_GENOME_NAME + ":1-1000"
    log:
        PROC_DIR + "/logs/{sample}.igv.log"
    run:
        igv_render(input.genome, [input.R1_bam, input.R2_bam, input.bam], output.U3, locusRange=params.U3_locus, maxPanelHeight=2000, expand=True, igv_prefs=igv_prefs)
        igv_render(input.genome, [input.R1_bam, input.R2_bam, input.bam], output.U5, locusRange=params.U5_locus, maxPanelHeight=2000, expand=True, igv_prefs=igv_prefs)
        igv_render(input.genome, [input.R1_bam, input.R2_bam, input.bam], output.genome, maxPanelHeight=2000, expand=True, igv_prefs=igv_prefs)

rule merge_bams:
    output:
        bam=PROC_DIR + "/analysis_data/all.paired.bam",
        R1_bam=PROC_DIR + "/analysis_data/all.R1.bam",
        R2_bam=PROC_DIR + "/analysis_data/all.R2.bam",
        U3bam=PROC_DIR + "/analysis_data/all.U3.paired.bam",
        U3R1_bam=PROC_DIR + "/analysis_data/all.U3.R1.bam",
        U3R2_bam=PROC_DIR + "/analysis_data/all.U3.R2.bam",
        U5bam=PROC_DIR + "/analysis_data/all.U5.paired.bam",
        U5R1_bam=PROC_DIR + "/analysis_data/all.U5.R1.bam",
        U5R2_bam=PROC_DIR + "/analysis_data/all.U5.R2.bam"
    input:
        bam=expand(PROC_DIR + "/analysis_data/{sample}.paired.bam", sample=SAMPLES),
        R1_bam=expand(PROC_DIR + "/analysis_data/{sample}.R1.bam", sample=SAMPLES),
        R2_bam=expand(PROC_DIR + "/analysis_data/{sample}.R2.bam", sample=SAMPLES),
        U3bam=expand(PROC_DIR + "/analysis_data/{sample}.paired.bam", sample=SAMPLES_U3),
        U3R1bam=expand(PROC_DIR + "/analysis_data/{sample}.R1.bam", sample=SAMPLES_U3),
        U3R2bam=expand(PROC_DIR + "/analysis_data/{sample}.R2.bam", sample=SAMPLES_U3),
        U5bam=expand(PROC_DIR + "/analysis_data/{sample}.paired.bam", sample=SAMPLES_U5),
        U5R1bam=expand(PROC_DIR + "/analysis_data/{sample}.R1.bam", sample=SAMPLES_U5),
        U5R2bam=expand(PROC_DIR + "/analysis_data/{sample}.R2.bam", sample=SAMPLES_U5)
    params:
        samtools="samtools"
    shell:
        """
        {params.samtools} merge {output.bam} {input.bam}
        {params.samtools} merge {output.R1_bam} {input.R1_bam}
        {params.samtools} merge {output.R2_bam} {input.R2_bam}
        {params.samtools} merge {output.U3bam} {input.U3bam}
        {params.samtools} merge {output.U3R1_bam} {input.U3R1bam}
        {params.samtools} merge {output.U3R2_bam} {input.U3R2bam}
        {params.samtools} merge {output.U5bam} {input.U5bam}
        {params.samtools} merge {output.U5R1_bam} {input.U5R1bam}
        {params.samtools} merge {output.U5R2_bam} {input.U5R2bam}
        """

rule igv_all:
    output:
        png=PROC_DIR + "/output_data/IGV/all.alignment.png",
        png33=PROC_DIR + "/output_data/IGV/all.U3.3LTR.alignment.png",
        png35=PROC_DIR + "/output_data/IGV/all.U3.5LTR.alignment.png",
        png53=PROC_DIR + "/output_data/IGV/all.U5.3LTR.alignment.png",
        png55=PROC_DIR + "/output_data/IGV/all.U5.5LTR.alignment.png"
    input:
        bam=PROC_DIR + "/analysis_data/all.paired.bam",
        R1_bam=PROC_DIR + "/analysis_data/all.R1.bam",
        R2_bam=PROC_DIR + "/analysis_data/all.R2.bam",
        bam_index=PROC_DIR + "/analysis_data/all.paired.bam.bai",
        R1_bam_index=PROC_DIR + "/analysis_data/all.R1.bam.bai",
        R2_bam_index=PROC_DIR + "/analysis_data/all.R2.bam.bai",
        U3bam=PROC_DIR + "/analysis_data/all.U3.paired.bam",
        U3R1_bam=PROC_DIR + "/analysis_data/all.U3.R1.bam",
        U3R2_bam=PROC_DIR + "/analysis_data/all.U3.R2.bam",
        U3bam_index=PROC_DIR + "/analysis_data/all.U3.paired.bam.bai",
        U3R1_bam_index=PROC_DIR + "/analysis_data/all.U3.R1.bam.bai",
        U3R2_bam_index=PROC_DIR + "/analysis_data/all.U3.R2.bam.bai",
        U5bam=PROC_DIR + "/analysis_data/all.U5.paired.bam",
        U5R1_bam=PROC_DIR + "/analysis_data/all.U5.R1.bam",
        U5R2_bam=PROC_DIR + "/analysis_data/all.U5.R2.bam",
        U5bam_index=PROC_DIR + "/analysis_data/all.U5.paired.bam.bai",
        U5R1_bam_index=PROC_DIR + "/analysis_data/all.U5.R1.bam.bai",
        U5R2_bam_index=PROC_DIR + "/analysis_data/all.U5.R2.bam.bai",
        genome=IGV_GENOME,
        gff3=IGV_GFF3
    params:
        U3_locus=IGV_GENOME_NAME + ":8720-9719",
        U5_locus=IGV_GENOME_NAME + ":1-1000"
    log:
        PROC_DIR + "/logs/all.igv.log"
    run:
        igv_render(input.genome, [input.R1_bam, input.R2_bam, input.bam], output.png, gff3=input.gff3, maxPanelHeight=2000, expand=True, igv_prefs=igv_prefs)
        igv_render(input.genome, [input.U3R1_bam, input.U3R2_bam, input.U3bam], output.png33, locusRange=params.U3_locus, gff3=input.gff3, maxPanelHeight=2000, expand=True, igv_prefs=igv_prefs)
        igv_render(input.genome, [input.U3R1_bam, input.U3R2_bam, input.U3bam], output.png35, locusRange=params.U5_locus, gff3=input.gff3, maxPanelHeight=2000, expand=True, igv_prefs=igv_prefs)
        igv_render(input.genome, [input.U5R1_bam, input.U5R2_bam, input.U5bam], output.png53, locusRange=params.U3_locus, gff3=input.gff3, maxPanelHeight=2000, expand=True, igv_prefs=igv_prefs)
        igv_render(input.genome, [input.U5R1_bam, input.U5R2_bam, input.U5bam], output.png55, locusRange=params.U5_locus, gff3=input.gff3, maxPanelHeight=2000, expand=True, igv_prefs=igv_prefs)

